<?php

namespace App\Models;
use App\Activity;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Auth;

class PslCall extends Model
{
    protected $guarded = [];

   // protected $dates = ['created_at', 'updated_at', 'eta_estimate_time'];
    /*
     * A Call owned by a User
     */
    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::created(function($call){
            Activity::create([
                'subject_id' => $call->id,
                'subject_type' => get_class($call),
                'name' => 'created_call',
                'user_id'=> $call->user_id
            ]);
        });

    }

    public function user()
    {
        return $this->belongsTo('App\User');
    }

    public function employee()
    {
        return $this->belongsTo('App\User','employee_id');
    }

    /*
     * A Call owned by a branch
     */
    public function branch()
    {
        return $this->belongsTo('App\Models\PslBranch');
    }

    /*
     * A Call owned by a branch
     */
    public function principal()
    {
        return $this->belongsTo('App\Models\PslPrincipal');
    }

    /*
     * A Call owned by a jetty
     */
    public function jetty()
    {
        return $this->belongsTo('App\Models\PslJetty');
    }

    /*
     * A Call owned by a branch
     */
    public function port()
    {
        return $this->belongsTo('App\Models\PslPort');
    }

    public function previous_port()
    {
        return $this->belongsTo('App\Models\PslPort','previous_port_id');
    }

    public function next_port()
    {
        return $this->belongsTo('App\Models\PslPort','next_port_id');
    }
    /*
     * Get the purposes associate with the given Call
     */

    public function purposes()
    {
        return $this->belongsToMany('App\Models\PslPurpose')->withTimestamps();
    }
    /*
     * get a list of purposes associate with the current call
     * @return array


    public function getPurposeListAttribute()
    {
        return $this->purposes->lists('id');
    }
    */
}
